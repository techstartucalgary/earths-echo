name: GPT Code Review

on:
  pull_request:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            **/*.cs
          fail-on-error: false

      - name: Generate Diff for .cs Files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Generating diff for C# files..."
          git diff origin/${{ github.base_ref }}... -- '*.cs' > cs_diff.txt
          cat cs_diff.txt
        shell: bash

      - name: Perform Code Review With GPT-4
        if: steps.changed-files.outputs.any_changed == 'true'
        id: code_review_suggestions
        env:
          OPEN_AI_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Get the code changes
          changed_code=$(cat cs_diff.txt)

          echo "Length of OPEN_AI_KEY: ${#OPEN_AI_KEY}"
          echo "PR Changes:"
          echo "$changed_code"
          
          # Escape newlines and double quotes in the changed_code
          escaped_code=$(echo "$changed_code" | jq -s -R -r @json)
          
          # Define the prompt directly
          CODE_REVIEW_PROMPT="You are a code reviewer. Please review the following unity C# code changes for best practices, potential bugs, and optimization opportunities. Provide constructive feedback and suggest improvements where necessary."
          
          response=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPEN_AI_KEY" \
            -d "{
              \"model\": \"gpt-3.5-turbo\",
              \"messages\": [
                { \"role\": \"system\", \"content\": \"$CODE_REVIEW_PROMPT\" },
                { \"role\": \"user\", \"content\": $escaped_code }
              ]
            }")
          
          echo "This is the response:"
          echo "$response"
          
          code_review_suggestions=$(echo "$response" | jq -r '.choices[0].message.content')
          
          echo "$code_review_suggestions" > code_suggestions.txt
          
          # Set the output for the next step
          echo "code_review_suggestions<<EOF" >> $GITHUB_OUTPUT
          echo "$code_review_suggestions" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash

      - name: Add Code Suggestions Comment
        if: steps.code_review_suggestions.outputs.code_review_suggestions != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Posting code review suggestions..."
          cat code_suggestions.txt
          
          escaped_comments=$(jq -s -R -r @json < code_suggestions.txt)
          
          curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
            -d "{\"body\":$escaped_comments}"
        shell: bash
